# Based on https://github.com/actions-rs/meta/blob/master/recipes/quickstart.md

on: [push, pull_request]

name: CI

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  testground:
    name: Testground runs
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          path: sdk-rust

      - name: Checkout testground
        uses: actions/checkout@v2
        with:
          path: testground
          repository: testground/testground

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.16.x"

      - name: Install testground
        run: make install
        working-directory: testground

      - name: Run testground daemon
        run: testground daemon &

      - name: Import testground plans
        run: testground plan import --from sdk-rust

      - name: Run testground plan (sdk-rust)
        run: |
          testground run single \
            --plan=sdk-rust \
            --testcase=example \
            --builder=docker:generic \
            --runner=local:docker \
            --instances=1 \
            --wait | tee run.out
      - name: Check testground output (sdk-rust)
        run: |
          TG_ID=$(awk '/run is queued with ID/ {print $10}' <run.out)
          testground status -t "${TG_ID}" --extended  | tee extendedstatus.out
          extstatus=$(awk '/Result/ {getline; print $0}' <extendedstatus.out)
          extstatus=$(echo "${extstatus}" | tr -d "[:cntrl:]" |  sed 's/\[0m//g')
          if [ "${extstatus}" == "null" ]
          then
            echo "${OUTPUT_OUTCOME}failure/canceled"
            exit 1
          fi

          outcome=$(echo "${extstatus}" | jq ".outcome")

          echo "the extended status was ${extstatus}"
          echo "The outcome of this test was ${outcome}"
          echo "${OUTPUT_OUTCOME}${outcome}"

          testground collect --runner "${TG_RUNNER}" "${TG_ID}"
          mv "${TG_ID}.tgz" ~/testground_output.tgz

          test "${outcome}" = "\"success\"" && exit 0 || exit 1
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: testground-output
          path: |
            ~/testground_output.tgz